[{"content":"The real measure of your wealth is how much youd be worth if you lost all your money. ‐ Unknown ‐\n","href":"/","title":"Home"},{"content":"","href":"/docs/","title":"Documentation"},{"content":" Here is a paragraph. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\nHeading 2 Another one. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\nHeading 3 Yet another, but centered! Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\rHeading 4  First item Second item  Nested unordered item  Third item  Nested ordered item 1 Nested ordered item 2   Heading 5 Where are the quotes!!!\n Simplify, then add lightness.\n— Colin Chapman\n Now, time for some links!\n GoHugo  Hugo Themes   Heading 6 Inline code: echo \u0026quot;What is the meaning of life?\u0026quot;. Who knows?\n// Codeblock  var meaningOfLife = 42; console.log(\u0026#39;The meaning of life is: \u0026#39;, meaningOfLife);  Who wants some table?\n   Engimo Caption More Caption     Cool What? Now, wut?!    Ah, enough for today, eh?\n","href":"/typography/","title":"Typography"},{"content":" Math and formulas Engimo comes with out-of-box support for math and formulas based on MathJax.\nDiagrams and charts Engimo extends Minimo theme with support of:\n Graphviz diagrams Digital waveforms diagrams 2D Charts Message Sequence Charts Flowcharts  Deprecated pages Support for marking pages as deprecated.\nOnline vs offline Most of these features are available when working online, since some of the work performed relies on JavaScript resources available in the Internet.\n   feature online offline     maths and formulas ✓ -   graphviz ✓ ✓   waveforms ✓ ✓   deprecated pages ✓ ✓   charts ✓ ✓   message sequence charts ✓ ✓   flowcharts ✓ ✓    Summary All features on a single page\n","href":"/engineering-support/","title":"Engineering Support"},{"content":"Engimo came as combination of two words: \u0026ldquo;engeineering\u0026rdquo; and Minimo.\n","href":"/about/","title":"About"},{"content":"  Node Package Manager (NPM) is the world\u0026rsquo;s largest software registry, with approximately 3 billion downloads per week. npm opens up an entire world of JavaScript talent to you and to your team. The registry contains over 600,000 packages (building blocks of code).\nOpen-source developers from every continent share and borrow packages through npm, accessing algorithms designed across the planet or across the street. Packages follow specific structures to enable you to track and manage versions and multiple dependencies. Node.js Download\n Getting Started If you\u0026rsquo;re using OS X or Windows, use one of the installers from the Node.js download page linked above. Be sure to install the version labeled LTS. Other versions have not yet been tested with npm.\nInstalling Node\n\nInstalling Local Packages There are two ways to install npm packages: locally or globally. Choose which kind of installation to use based on how you want to use the package.\n If you want to depend on the package from your own module, using something like Node.js\u0026rsquo; require, then you want to install locally. This is npm install\u0026rsquo;s default behavior. If you want to use a package as a command line tool, (such as grunt CLI), then install it globally.  Installing Packages\nPackages and Modules\n\nWorking with package.json The best way to manage locally installed npm packages is to create a package.json file.\nA package.json file:\n Lists the packages that your project depends on.\n Allows you to specify the versions of a package that your project can use using semantic versioning rules.\n Makes your build reproducible, and therefore much easier to share with other developers.\n  Requirements A package.json must have:\n \u0026ldquo;name\u0026rdquo;  all lowercase one word, no spaces dashes and underscores allowed  \u0026ldquo;version\u0026rdquo;  in the form of x.x.x follows semver spec e.g.:  { \u0026quot;name\u0026quot;: \u0026quot;my-awesome-package\u0026quot;, \u0026quot;version\u0026quot;: \u0026quot;1.0.0\u0026quot; }    \nCreating a package.json There are two basic ways to create a package.json file.\n Run a CLI questionnaire To create a package.json with values that you supply, run:  \u0026gt; npm init  This will initiate a command line questionnaire that will conclude with the creation of a package.json in the directory in which you initiated the command. To get a default package.json, run npm init with the \u0026ndash;yes or -y flag:  \u0026gt; npm init --yes  This method will generate a default package.json using information extracted from the current directory.   \nNodejs Local Server If Node.js is already downloaded and installed in your system, you can easily set up a simple HTTP web server on your system using Node.js. Install the http-server package from npm To do this, follow these steps outlined below:\n Open a command prompt / command line window in the administrator mode Enter the following command:  npm install -g http-server  Switch to the directory containing the web files Start the web server with this following command:  http-server -o   That\u0026rsquo;s all you need to do, The -o automatically opens the web server in your browser. You can also enter just http-server and manually browse to http://localhost:8080 from your web browser. ","href":"/docs/node-npm/","title":"NodeJS and NPM"},{"content":" In order to include flowchart.js diagram, add the following attribute to the page metadata section:\n--- flowchart: true ---  You may then start embedding flowcharts.\nFlowchart To embed an example flowchart, add code block section labeled with flowchart as a language:\n```flowchart st=\u0026gt;start: Start:\u0026gt;http://www.google.com[blank] e=\u0026gt;end:\u0026gt;http://www.google.com op1=\u0026gt;operation: My Operation sub1=\u0026gt;subroutine: My Subroutine cond=\u0026gt;condition: Yes or No?:\u0026gt;http://www.google.com io=\u0026gt;inputoutput: catch something... para=\u0026gt;parallel: parallel tasks st-\u0026gt;op1-\u0026gt;cond cond(yes)-\u0026gt;io-\u0026gt;e cond(no)-\u0026gt;para para(path1, bottom)-\u0026gt;sub1(right)-\u0026gt;op1 para(path2, top)-\u0026gt;op1 ```  st=\u0026gt;start: Start:\u0026gt;http://www.google.com[blank] e=\u0026gt;end:\u0026gt;http://www.google.com op1=\u0026gt;operation: My Operation sub1=\u0026gt;subroutine: My Subroutine cond=\u0026gt;condition: Yes or No?:\u0026gt;http://www.google.com io=\u0026gt;inputoutput: catch something... para=\u0026gt;parallel: parallel tasks st-\u0026gt;op1-\u0026gt;cond cond(yes)-\u0026gt;io-\u0026gt;e cond(no)-\u0026gt;para para(path1, bottom)-\u0026gt;sub1(right)-\u0026gt;op1 para(path2, top)-\u0026gt;op1","href":"/docs/flowcharts/","title":"Flowcharts support"},{"content":"Engimo supports embedding simple message sequence charts, with help of js-sequence-diagrams.\nA simple sequence chart like this one:\nAndrew-\u0026gt;China: Says Hello Note right of China: China thinks\\nabout it China--\u0026gt;Andrew: How are you? Andrew-\u0026gt;\u0026gt;China: I am good thanks! can be embedded with enabling these chart types on a page with\n--- msc: true ---  and then creating code block with msc type:\n```msc Andrew-\u0026gt;China: Says Hello Note right of China: China thinks\\nabout it China--\u0026gt;Andrew: How are you? Andrew-\u0026gt;\u0026gt;China: I am good thanks! ```  ","href":"/docs/message-sequence-charts/","title":"Message Sequence Charts"},{"content":" Engimo adds support for chars rendered with help of Chart.js.\nThis bar chart is an example of what the support looks like:\n{ \u0026#34;type\u0026#34;: \u0026#34;bar\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;labels\u0026#34;: [\u0026#34;One\u0026#34;, \u0026#34;Two\u0026#34;, \u0026#34;Three\u0026#34;, \u0026#34;Four\u0026#34;, \u0026#34;Five\u0026#34;, \u0026#34;Six\u0026#34;], \u0026#34;datasets\u0026#34;: [{ \u0026#34;label\u0026#34;: \u0026#34;# of Votes\u0026#34;, \u0026#34;data\u0026#34;: [12, 19, 3, 5, 3, 8] }] } } To get chart like this one above, follow the steps:\n Add this to the metadata section\n--- chart: true ---  Then add the chart to the page, e.g:\n```chart { \u0026quot;type\u0026quot;: \u0026quot;bar\u0026quot;, \u0026quot;data\u0026quot;: { \u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;], \u0026quot;datasets\u0026quot;: [{ \u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;, \u0026quot;data\u0026quot;: [12, 19, 3, 5, 3, 8] }] } } ```   Line charts Line charts are also simple:\n{ \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;labels\u0026#34;: [\u0026#34;One\u0026#34;, \u0026#34;Two\u0026#34;, \u0026#34;Three\u0026#34;, \u0026#34;Four\u0026#34;, \u0026#34;Five\u0026#34;, \u0026#34;Six\u0026#34;], \u0026#34;datasets\u0026#34;: [ { \u0026#34;label\u0026#34;: \u0026#34;# of Votes\u0026#34;, \u0026#34;data\u0026#34;: [12, 19, 3, 5, 2, 3], \u0026#34;backgroundColor\u0026#34;:\u0026#34;transparent\u0026#34;, \u0026#34;borderColor\u0026#34;:\u0026#34;orange\u0026#34; }, { \u0026#34;label\u0026#34;: \u0026#34;Some other set\u0026#34;, \u0026#34;data\u0026#34;: [15, 8, 13, 5, 5, 9], \u0026#34;backgroundColor\u0026#34;:\u0026#34;transparent\u0026#34;, \u0026#34;borderColor\u0026#34;:\u0026#34;#44ccff\u0026#34; } ] } } with:\n```chart { \u0026quot;type\u0026quot;: \u0026quot;line\u0026quot;, \u0026quot;data\u0026quot;: { \u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;], \u0026quot;datasets\u0026quot;: [ { \u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;, \u0026quot;data\u0026quot;: [12, 19, 3, 5, 2, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;orange\u0026quot; }, { \u0026quot;label\u0026quot;: \u0026quot;Some other set\u0026quot;, \u0026quot;data\u0026quot;: [15, 8, 13, 5, 5, 9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#44ccff\u0026quot; } ] } } ```  Well, I think you get the idea.\nDocumentation More examples and documentation on Chart.js.\n","href":"/docs/charts/","title":"2D Charts"},{"content":"Engimo adds a new boolean parameter to the metadata section: deprecated. When set to true like this:\n--- deprecated: true ---  then the page will have a red box indicating that:\nThis page has been marked as deprecated \u0026nbsp;\nIn addition, when the title of the page is listed (e.g. with tags, categories lists etc.) the title is extended with (deprecated) phrase.\n","href":"/docs/deprecated/","title":"Deprecated Pages"},{"content":" Engimo support embedding wavedrom diagrams. For that, insert the following line into page metadata section:\n--- wave: true ---  then, in the content you may inline the diagram using viz-dot as a language:\n```wave { \u0026quot;signal\u0026quot;: [ {\u0026quot;name\u0026quot;:\u0026quot;CLK\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;p.....|...\u0026quot;}, {\u0026quot;name\u0026quot;:\u0026quot;DAT\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;x.345x|=.x\u0026quot;, \u0026quot;data\u0026quot;:[\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;,\u0026quot;D\u0026quot;]}, {\u0026quot;name\u0026quot;:\u0026quot;REQ\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;0.1..0|1.0\u0026quot;}, {}, {\u0026quot;name\u0026quot;:\u0026quot;ACK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;1.....|01.\u0026quot;} ]} ```  Result { \u0026#34;signal\u0026#34;: [ {\u0026#34;name\u0026#34;: \u0026#34;CLK\u0026#34;, \u0026#34;wave\u0026#34;: \u0026#34;p.....|...\u0026#34;}, {\u0026#34;name\u0026#34;:\u0026#34;DAT\u0026#34;, \u0026#34;wave\u0026#34;:\u0026#34;x.345x|=.x\u0026#34;, \u0026#34;data\u0026#34;:[\u0026#34;A\u0026#34;,\u0026#34;B\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;D\u0026#34;]}, {\u0026#34;name\u0026#34;: \u0026#34;REQ\u0026#34;, \u0026#34;wave\u0026#34;: \u0026#34;0.1..0|1.0\u0026#34;}, {}, {\u0026#34;name\u0026#34;: \u0026#34;ACK\u0026#34;, \u0026#34;wave\u0026#34;: \u0026#34;1.....|01.\u0026#34;} ]} Documentation Please refer to this tutorial for more help.\n","href":"/docs/waveforms/","title":"Digital Signals Waveforms"},{"content":" In order to include graphviz diagram, add the following attribute to the page metadata section:\n--- viz: true ---  You may then start adding diagrams.\nDirected graphs To embed directed graphs, add code block section labeled with viz-dot as a language:\n```viz-dot digraph g { node[shape=\u0026quot;circle\u0026quot; , label=\u0026quot;\u0026quot;, width=0.2, height=0.2] l1[xlabel=\u0026quot;v\\(s\\)\u0026quot;] l21[xlabel=\u0026quot;a\u0026quot;, width=0.1, height=0.1 , style=filled] l22[width=0.1, height=0.3, style=filled] l31[xlabel=\u0026quot;v\\(s'\\)\u0026quot;] l1 -\u0026gt; l21 l1 -\u0026gt; l22 l21 -\u0026gt; l31 [xlabel=\u0026quot;r\u0026quot;] l21 -\u0026gt; l32 l22 -\u0026gt; l33 l22 -\u0026gt; l34 } ```  digraph g { node[shape=\u0026#34;circle\u0026#34; , label=\u0026#34;\u0026#34;, width=0.2, height=0.2] l1[xlabel=\u0026#34;v\\(s\\)\u0026#34;] l21[xlabel=\u0026#34;a\u0026#34;, width=0.1, height=0.1 , style=filled] l22[width=0.1, height=0.3, style=filled] l31[xlabel=\u0026#34;v\\(s\u0026#39;\\)\u0026#34;] l1 -\u0026gt; l21 l1 -\u0026gt; l22 l21 -\u0026gt; l31 [xlabel=\u0026#34;r\u0026#34;] l21 -\u0026gt; l32 l22 -\u0026gt; l33 l22 -\u0026gt; l34 } Details Engimo is uing 1.8.2 version of viz.js project for rendering.\n","href":"/docs/graphviz/","title":"Graphviz Support"},{"content":" Math $ \\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x) $\n$ A_n = \\begin{pmatrix} a_1 \u0026amp; a_2 \u0026amp; \\ldots \u0026amp; a_n \\\\\nb_1 \u0026amp; b_2 \u0026amp; \\ldots \u0026amp; b_n \\\\ \\end{pmatrix} $\nGraphviz digraph g { node[shape=\u0026#34;circle\u0026#34; , label=\u0026#34;\u0026#34;, width=0.2, height=0.2] l1[xlabel=\u0026#34;v\\(s\\)\u0026#34;] l21[xlabel=\u0026#34;a\u0026#34;, width=0.1, height=0.1 , style=filled] l22[width=0.1, height=0.3, style=filled] l31[xlabel=\u0026#34;v\\(s\u0026#39;\\)\u0026#34;] l1 -\u0026gt; l21 l1 -\u0026gt; l22 l21 -\u0026gt; l31 [xlabel=\u0026#34;r\u0026#34;] l21 -\u0026gt; l32 l22 -\u0026gt; l33 l22 -\u0026gt; l34 } Waveform { \u0026#34;signal\u0026#34;: [ {\u0026#34;name\u0026#34;: \u0026#34;CLK\u0026#34;, \u0026#34;wave\u0026#34;: \u0026#34;p.....|...\u0026#34;}, {\u0026#34;name\u0026#34;:\u0026#34;DAT\u0026#34;, \u0026#34;wave\u0026#34;:\u0026#34;x.345x|=.x\u0026#34;, \u0026#34;data\u0026#34;:[\u0026#34;A\u0026#34;,\u0026#34;B\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;D\u0026#34;]}, {\u0026#34;name\u0026#34;: \u0026#34;REQ\u0026#34;, \u0026#34;wave\u0026#34;: \u0026#34;0.1..0|1.0\u0026#34;}, {}, {\u0026#34;name\u0026#34;: \u0026#34;ACK\u0026#34;, \u0026#34;wave\u0026#34;: \u0026#34;1.....|01.\u0026#34;} ]} Chart { \u0026#34;type\u0026#34;: \u0026#34;line\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;labels\u0026#34;: [\u0026#34;One\u0026#34;, \u0026#34;Two\u0026#34;, \u0026#34;Three\u0026#34;, \u0026#34;Four\u0026#34;, \u0026#34;Five\u0026#34;, \u0026#34;Six\u0026#34;], \u0026#34;datasets\u0026#34;: [ { \u0026#34;label\u0026#34;: \u0026#34;# of Votes\u0026#34;, \u0026#34;data\u0026#34;: [12, 19, 3, 5, 2, 3] } ] } } MSC Andrew-\u0026gt;China: Says Hello Note right of China: China thinks\\nabout it China--\u0026gt;Andrew: How are you? Andrew-\u0026gt;\u0026gt;China: I am good thanks! Flowcharts st=\u0026gt;start: Start:\u0026gt;http://www.google.com[blank] e=\u0026gt;end:\u0026gt;http://www.google.com op1=\u0026gt;operation: My Operation sub1=\u0026gt;subroutine: My Subroutine cond=\u0026gt;condition: Yes or No?:\u0026gt;http://www.google.com io=\u0026gt;inputoutput: catch something... para=\u0026gt;parallel: parallel tasks st-\u0026gt;op1-\u0026gt;cond cond(yes)-\u0026gt;io-\u0026gt;e cond(no)-\u0026gt;para para(path1, bottom)-\u0026gt;sub1(right)-\u0026gt;op1 para(path2, top)-\u0026gt;op1 Deprecated pages This page has been marked as deprecated. ","href":"/features-summary/","title":"Features Summary"},{"content":" Configure Fuse.js Search Client Select Fuse.js as the search client in your config.toml file:\n[params.search] client = \u0026#34;fuse\u0026#34;","href":"/docs/search-fuse-js/","title":"Search: Fuse.js"},{"content":" Configure Algolia Search Client Select Algolia as the search client in your config.toml file:\n[params.search] client = \u0026#34;algolia\u0026#34; Also, add configuration options for Algolia:\n[params.search.algolia] appId = \u0026#34;\u0026#34; indexName = \u0026#34;\u0026#34; searchApiKey = \u0026#34;\u0026#34;  params.search.algolia [Map]:  appId [String]: Algolia Application ID indexName [String]: Name for Algolia Indices\ndefault: engimo_site searchApiKey [String]: Algolia Search-Only API Key   You\u0026rsquo;ll find various information related to your Algolia account in the Algolia Dashboard.\nGenerate Search Index for Algolia Algolia will need a search index for searching across your site. So, you\u0026rsquo;ll need to generate that search index for Algolia before you deploy your site.\nEngimo comes with a script for generating the search index for Algolia: /scripts/generate-search-index-algolia.js.\nInstall Dependencies Node.js must be installed on your system for using the generator script.\nIt also needs the following npm packages:\n algoliasearch glob  For installing algoliasearch and glob globally use the following command:\nnpm install -g algoliasearch glob Set Environment Variables The generator script uses the following environment variables:\n ALGOLIA_APP_ID (required): Algolia Application ID ALGOLIA_ADMIN_API_KEY (required): Algolia Admin API Key ALGOLIA_INDEX_NAME (optional): Name for Algolia Indices\ndefault: engimo_site  Run the Script After you\u0026rsquo;ve generated your site with Hugo, run generate-search-index-algolia.js with node.\nIf Engimo is installed under /themes/engimo directory, you\u0026rsquo;ll run it as:\nnode ./themes/engimo/scripts/generate-search-index-algolia.js The generate-search-index-algolia.js script accepts an optional argument for Hugo\u0026rsquo;s publishDir (relative to your site\u0026rsquo;s root directory).\nSo, if you\u0026rsquo;ve got a different publishDir (say site), pass it as the first argument:\nnode ./themes/engimo/scripts/generate-search-index-algolia.js site If the generation was successful, you\u0026rsquo;ll see output like this:\nAlgolia Index Generated for: /search/index.json  That\u0026rsquo;s all. Now you can deploy your site.\n","href":"/docs/search-algolia/","title":"Search: Algolia"},{"content":" Configure Lunr.js Search Client Select Lunr.js as the search client in your config.toml file:\n[params.search] client = \u0026#34;lunr\u0026#34; Generate Search Index for Lunr.js Lunr.js will need a search index for searching across your site. So, you\u0026rsquo;ll need to generate that search index for Lunr.js before you deploy your site.\nEngimo comes with a script for generating the search index for Lunr.js: /scripts/generate-search-index-lunr.js.\nInstall Dependencies Node.js must be installed on your system for using the generator script.\nIt also need the following npm packages:\n glob lunr  For installing lunr and glob globally use the following command:\nnpm install -g lunr glob Run the Script After you\u0026rsquo;ve generated your site with Hugo, run generate-search-index-lunr.js with node.\nIf Engimo is installed under /themes/engimo directory, you\u0026rsquo;ll run it as:\nnode ./themes/engimo/scripts/generate-search-index-lunr.js The generate-search-index-lunr.js script accepts an optional argument for Hugo\u0026rsquo;s publishDir (relative to your site\u0026rsquo;s root directory).\nSo, if you\u0026rsquo;ve got a different publishDir (say site), pass it as the first argument:\nnode ./themes/engimo/scripts/generate-search-index-lunr.js site If the generation was successful, you\u0026rsquo;ll see output like this:\nLunr.js Index Generated for: /search/index.json That\u0026rsquo;s all. Now you can deploy your site.\n","href":"/docs/search-lunr-js/","title":"Search: Lunr.js"},{"content":" Engimo supports the following clients for the search feature:\n Algolia Fuse.js Lunr.js  Follow the following steps for enabling search in your site.\nCreate Search Page First of all, you\u0026rsquo;ll need to create a search page.\nCreate a markdown file under /content/search/ directory with the filename _index.md.\nAdd the following options in the frontmatter:\ntype: page layout: search outputs: - html - json Select Search Client For selecting the client for search feature, use the following options in your config.toml file:\n[params.search] client = \u0026#34;\u0026#34;  params.search [Map]:  client [String]: Name of the Search Client (supported values: algolia,fuse,lunr)   Client Specific Steps The next steps are different for each search client:\n Algolia Fuse.js Lunr.js  After you complete those steps, you are good to go!\nAdd Search Widget You might also want to add the search widget.\n","href":"/docs/search-support/","title":"Search Support"},{"content":" Engimo has support for comments baked into it.\nEnable/Disable Comments Globally For enabling or disabling comments globally, check the following setting in your config.toml file:\n[params.comments] enable = false  params.comments [Map]:  enable [Boolean]: Enable/Disable comments globally   For Specific Posts The global .Site.Params.comments.enable setting can be overridden for specific posts in their content\u0026rsquo;s frontmatter with this option:\n--- comments: true ---  comments [Boolean]: Enable/Disable comments for specific posts  Of course, you\u0026rsquo;ll also need to setup a comment system ( Disqus or Staticman ).\nSetting Up Comment System Engimo currently supports Disqus, Staticman and Utterances to be used as your site\u0026rsquo;s comment system.\nDisqus Disqus comments require you set a single value to the following option in your config.toml file:\ndisqusShortname = \u0026#34;\u0026#34;  disqusShortname [String]: Shortname for you site\u0026rsquo;s Disqus account  And that\u0026rsquo;s all!\nStaticman Staticman only supports GitHub. So, if your site\u0026rsquo;s repository is not hosted in GitHub, it won\u0026rsquo;t work.\nConfigure Engimo for Staticman First of all, set up the following options in your config.toml file:\n[params.comments.staticman] enable = true apiEndpoint = \u0026#34;https://api.staticman.net/v2/entry\u0026#34; maxDepth = 2 [params.comments.staticman.github] username = \u0026#34;achary\u0026#34; repository = \u0026#34;engimo\u0026#34; branch = \u0026#34;master\u0026#34;  params.comments.staticman [Map]:  enable [Boolean]: Enable Staticman apiEndpoint [String]: API endpoint for Staticman instance maxDepth [Integer]: Maximum allowed comments depth  params.comments.staticman.github [Map]:  username [String]: Your GitHub Username repository [String]: Name of your Site\u0026rsquo;s GitHub Repository branch [String]: Branch name of Site\u0026rsquo;s GitHub Repository   Staticman Configuration File Next, you\u0026rsquo;ll need a Staticman Configuration File (staticman.yml) in the root of your site\u0026rsquo;s repository. Here\u0026rsquo;s a sample of it:\nstaticman.yml\ncomments: allowedFields: [\u0026#34;author\u0026#34;, \u0026#34;content\u0026#34;, \u0026#34;email\u0026#34;, \u0026#34;parent_id\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;site\u0026#34;] branch: \u0026#34;master\u0026#34; commitMessage: \u0026#34;add [comment]: by {fields.author} \u0026lt;Staticman\u0026gt;\\n\\n{fields.permalink}#comment-{@id}\u0026#34; filename: \u0026#34;{@id}\u0026#34; format: \u0026#34;yaml\u0026#34; generatedFields: date: type: date options: format: \u0026#34;timestamp\u0026#34; moderation: false name: \u0026#34;Engimo\u0026#34; path: \u0026#34;data/comments/{options.postId}\u0026#34; requiredFields: [\u0026#34;author\u0026#34;, \u0026#34;content\u0026#34;, \u0026#34;email\u0026#34;, \u0026#34;permalink\u0026#34;] transforms: email: md5 Notes  In most cases, you\u0026rsquo;ll only need to change the name option (Site\u0026rsquo;s name) If you set moderation: true, Staticman will send a Pull Request whenever a new comment is submitted. You\u0026rsquo;ll need to Merge the Pull Request to approve it, or Close to discard. Use the same branch name in both config.toml \u0026amp; staticman.yml  Add Staticman to Your Site\u0026rsquo;s Repository Staticman will need push access to your site\u0026rsquo;s repository for committing comment files. In GitHub, go to your repository Settings page, navigate to the Collaborators tab and add the username staticmanapp.\nAt this point, the invitation will be pending. In order for Staticman to accept it, you\u0026rsquo;ll need to open:\nhttps://api.staticman.net/v2/connect/{github.username}/{github.repository}\n[ Replace the {github.username} and {github.repository} with your GitHub username and repository\u0026rsquo;s name. ]\n\rIf all goes well, you should receive a message saying OK!\nAnd you should be good to go!\nUtterances Utterances only supports GitHub. So, if your site\u0026rsquo;s repository is not hosted in GitHub, it won\u0026rsquo;t work.\nFor using Utterances, set up the following options in your config.toml file:\n[params.comments.utterances] enable = true issueTerm = \u0026#34;pathname\u0026#34; # pathname / url / title [params.comments.utterances.github] username = \u0026#34;achary\u0026#34; repository = \u0026#34;engimo\u0026#34;  params.comments.utterances [Map]:  enable [Boolean]: Enable Utterances issueTerm [String]: Entry to Issue mapping option (pathname / url / title)  params.comments.utterances.github [Map]:  username [String]: Your GitHub Username repository [String]: Name of your Site\u0026rsquo;s GitHub Repository   Check utteranc.es for more information.\nThat should do it!\n","href":"/docs/comments-support/","title":"Comments Support"},{"content":"First of all, if you really want emojis, set the enableEmoji setting to true in your config.toml file:\nenableEmoji = true This will enable Hugo to find Emoji Shorthands in your content files and render them as Unicode Emoji Characters.\nFor example:\n:smiley: will become 😃\n\rNo, it\u0026rsquo;ll probably not be that colorful! Unless your device\u0026rsquo;s operating system natively supports colorful emojis, you will see a black \u0026amp; white one instead. 🔥\n✏️ For getting that colorful look, you will have to add this to your content\u0026rsquo;s frontmatter:\n--- emoji: true --- And where can you find these Emoji Shorthands ❓\n🎉 Go take a look at: Emoji Cheat Sheet\n","href":"/docs/emoji-support/","title":"Emoji Support"},{"content":" For enabling MathJax, add this to your content\u0026rsquo;s frontmatter:\n--- mathjax: true --- MathJax Syntax for Markdown In your Markdown content, use \\\\(\u0026hellip;\\\\) delimiters for in-line mathematics.\nFor mathematics blocks you can use either $$\u0026hellip;$$ or \\\\[\u0026hellip;\\\\] as delimiters.\nHere\u0026rsquo;s an example Markdown content:\nWhen \\\\( a \\ne 0 \\\\), there are two solutions to$$ ax^2 + bx + c = 0 $$and they are:\\\\[ x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a} \\\\] Output:\nWhen \\( a \\ne 0 \\), there are two solutions to\n$$ ax^2 + bx + c = 0 $$\nand they are:\n\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]\nCustomize MathJax Configuration You can customize the default behavior of MathJax if you want.\nEngimo picks up configuration for MathJax from the /data/config/mathjax.json file.\nThe default configuration options look like this:\n{ \u0026#34;library\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;//unpkg.com/mathjax/MathJax.js\u0026#34;, \u0026#34;config\u0026#34;: \u0026#34;TeX-MML-AM_CHTML\u0026#34; }, \u0026#34;config\u0026#34;: {} }  library [Object]:  path [String]: URL for the main MathJax.js file. config [String]: Configuration file\u0026rsquo;s name/path  config [Object]:  In-line configuration options   So, if you want to tinker with it\u0026rsquo;s configuration options:\n Create a /data/config/mathjax.json file in your site\u0026rsquo;s repository Copy the default configuration options Start hacking  For exmaple, if you want to enable $\u0026hellip;$ delimiters for in-line mathematics, you probably want something like this:\n{ \u0026#34;library\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;//unpkg.com/mathjax/MathJax.js\u0026#34;, \u0026#34;config\u0026#34;: \u0026#34;TeX-MML-AM_CHTML\u0026#34; }, \u0026#34;config\u0026#34;: { \u0026#34;tex2jax\u0026#34;: { \u0026#34;inlineMath\u0026#34;: [[\u0026#34;$\u0026#34;, \u0026#34;$\u0026#34;], [\u0026#34;\\\\(\u0026#34;, \u0026#34;\\\\)\u0026#34;]], \u0026#34;processEscapes\u0026#34;: true } } } Related Guides  Using a configuration file Combined Configurations Using in-line configuration options Configuration Options  ","href":"/docs/mathjax-support/","title":"MathJax Support"},{"content":" Enabling Sidebar For enabling Sidebar, use the following configuration options in your config.toml file:\n[params.sidebar] enable = true  params.sidebar [Map]:  enable [Boolean]: Switch for enabling sidebar   Adding Widgets to Sidebar For adding Widgets to the Sidebar, check the Widgets documentation.\n","href":"/docs/sidebar/","title":"Sidebar"},{"content":" Engimo supports Widgets that you can place on specific Widget Areas.\nAvailable Widgets Engimo has the following built-in Widgets:\n   Name Slug     1. About about   2. Recent Posts recent_posts   3. Search search   4. Sidebar Menu sidebar_menu   5. Social Menu social_menu   6. Taxonomy Cloud taxonomy_cloud    Widget Configuration Options Here are the configuration options available for the Widgets:\nWidget: About  about [Map]:  title [String]: Title\ndefault: .Site.Title description [String]: Description\ndefault: .Site.Params.info.description logo [String]: path/url of Logo\ndefault: \u0026quot;/images/logo.png\u0026quot;   Widget: Recent Posts  recent_posts [Map]:  title [String]: Title\ndefault: \u0026quot;Recent Posts\u0026quot; length [Integer]: Number of posts to show\ndefault: 5 excludeTypes [Array of Strings]: Types of posts to exclude\ndefault: [\u0026quot;page\u0026quot;]   Widget: Search  search [Map]:  title [String]: Title\ndefault: \u0026quot;Search\u0026quot;   Widget: Sidebar Menu  sidebar_menu [Map]:  title [String]: Title\ndefault: \u0026quot;\u0026quot; mirror [String]: Name of menu to mirror (e.g. \u0026quot;main\u0026quot;)\ndefault: \u0026quot;\u0026quot;   Widget: Social Menu  social_menu [Map]:  title [String]: Title\ndefault: \u0026quot;\u0026quot; platforms [Array of Strings]: Social platform to show   Widget: Taxonomy Cloud  taxonomy_cloud [Map]:  title [String]: Title\ndefault: Plural Name for taxonomyCloud.taxonomy taxonomy [String]: Taxonomy to show\ndefault: .Site.Params.info.description shuffle [Boolean]: Shuffle Taxonomy Terms\ndefault: true   Available Widget Areas    Name Slug     Homepage homepage   Sidebar sidebar   Footer footer    You can add Widgets to Widget Areas from your config.toml file:\n[params.widgets] homepage = [\u0026#34;recent_posts\u0026#34;] sidebar = [\u0026#34;about\u0026#34;,\u0026#34;taxonomy_cloud\u0026#34;] footer = [\u0026#34;social_menu\u0026#34;] The syntax for adding Widgets to Widget Areas is:\nwidget_area_slug = [ widget_slug_1, widget_slug_2, ...] Widgets Configuration File Engimo picks up Widgets\u0026rsquo; configuration from the /data/config/widgets.toml file.\nHere\u0026rsquo;s the Widgets Config file for this site:\n/data/config/widgets.toml\n# About Widget config [about] title = \u0026#34;\u0026#34; # default: .Site.Title description = \u0026#34;\u0026#34; # default: .Site.Params.info.description #logo = \u0026#34;/images/logo.png\u0026#34; # default: \u0026#34;/images/logo.png\u0026#34; logo = \u0026#34;/images/icon.png\u0026#34; # Recent Posts Widget config [recent_posts] title = \u0026#34;\u0026#34; # default: \u0026#34;Recent Posts\u0026#34; length = 4 # default: 5 excludeTypes = [\u0026#34;page\u0026#34;] # default: [\u0026#34;page\u0026#34;] # Search Widget config [search] title = \u0026#34;Search\u0026#34; # default: \u0026#34;Search\u0026#34; # Sidebar Menu Widget config [sidebar_menu] title = \u0026#34;\u0026#34; # default: \u0026#34;\u0026#34; mirror = \u0026#34;\u0026#34; # default: \u0026#34;\u0026#34; # Social Menu Widget config [social_menu] title = \u0026#34;Contact\u0026#34; # default: \u0026#34;\u0026#34; platforms = [\u0026#34;github\u0026#34;,\u0026#34;facebook\u0026#34;,\u0026#34;twitter\u0026#34;,\u0026#34;instagram\u0026#34;,\u0026#34;email\u0026#34;,\u0026#34;codepen\u0026#34;,\u0026#34;gitlab\u0026#34;,\u0026#34;linkedin\u0026#34;,\u0026#34;telegram\u0026#34;,\u0026#34;google_scholar\u0026#34;,\u0026#34;youtube\u0026#34;] # Taxonomy Cloud Widget config [taxonomy_cloud] title = \u0026#34;\u0026#34; # default: Plural Name for `taxonomyCloud.taxonomy` taxonomy = \u0026#34;tags\u0026#34; # default: \u0026#34;tags\u0026#34; shuffle = false # default: true If configuration for any Widgets are missing in this file, Engimo will fallback to the default configuration for those Widgets.\nGo wild!\n","href":"/docs/widgets/","title":"Widgets"},{"content":" Engimo comes with several shortcodes built-in.\nShortcode: center Center align you content.\ncenter: Parameters  Markdown content between opening and closing tags.  center: Usage Example {{% center %}} _Center Aligned Text_ {{% /center %}} Output\nCenter Aligned Text\n\rShortcode: convo Renders conversation blocks.\nconvo: Parameters  sep [String] (optional): seperator between person and text (default: \u0026ldquo;:\u0026rdquo;)  convo: Inner Syntax person :: text You can remove the person part, if you want.\nconvo: Usage Example {{\u0026lt; convo sep=\u0026#34;:\u0026#34; \u0026gt;}} Jerry :: You don\u0026#39;t look so tough. Finch :: It\u0026#39;s because I have only two modes, Jerry. Calm, and furious. It\u0026#39;s a rare person that sees the latter and lives to talk about it. {{\u0026lt; /convo \u0026gt;}} Output\n\r\r\r\r\r\r\r\rJerry\r: \rYou don\u0026rsquo;t look so tough.\r\r\r\r\r\rFinch\r: \rIt\u0026rsquo;s because I have only two modes, Jerry. Calm, and furious. It\u0026rsquo;s a rare person that sees the latter and lives to talk about it.\r\r\r\r\r\r\rShortcode: file Include content from seperate file with syntax highlighting.\nfile: Parameters 0 =\u0026gt; filename [String] (required)\n1 =\u0026gt; filetype [String] (optional)\nfile: Usage Example {{\u0026lt; file \u0026#34;content/_index.md\u0026#34; \u0026gt;}} Output\n---title: Homemenu: - main - sidebarweight: -270---The real measure of your wealth is how much youd be worth if you lost all your money.**‐ Unknown ‐** Shortcode: text Text with custom size and color\ntext: Parameters You can use either Named or Unnamed Parameters\nNamed Parameters\n s or size [String] (optional): multiplier relative to the normal size c or color [String] (optional): name / hex / rgb / rgba  Unnamed Parameters\n0 =\u0026gt; textsize [String] (required): multiplier relative to the normal size\n1 =\u0026gt; textcolor [String] (optional): name / hex / rgb / rgba\ntext: Usage Example {{% text s=\u0026#34;1.4\u0026#34; color=\u0026#34;purple\u0026#34; %}} font-size: 1.4em; color: purple; {{% /text %}} Output\nfont-size: 1.5em;\ncolor: purple;\n\r","href":"/docs/shortcodes/","title":"Shortcodes"},{"content":"You can add cover image to your contents with the cover paramameter in the content\u0026rsquo;s front-matter.\nYou can directly provide the image url:\n--- cover: /images/eden-farm-children-s-village.jpg ---  cover [String]: path/url of the cover image  Or you can provide additional information:\n--- cover: image: /images/eden-farm-children-s-village.jpg alternate: Picture of a yellow wall with a blue window in the upper-left corner caption: Eden Farm Children\u0026#39;s Village by Gareth Harper on Unsplash style: full ---  cover [Map]:  image [String]: path/url of the cover image alternate [String]: alternate text for the image caption [String]: caption for the cover image style [String]: full / wide / normal   ","href":"/docs/cover-image/","title":"Cover Image"},{"content":"You can translate Engimo in your own language!\nFor example, if you want to translate Engimo in Spanish, you will have to add this to your site\u0026rsquo;s config file:\n[languages.es] lang = \u0026#34;es\u0026#34; languageName = \u0026#34;Spanish\u0026#34; weight = 1 Then create a folder named /i18n/ in your site\u0026rsquo;s root. And create a file /i18n/es.toml with the translated strings.\nFor reference template you can see the en.toml file.\nIf you want your translation file to be included in Engimo repository, feel free to create a pull request.\n","href":"/docs/translation/","title":"Translation Support"},{"content":"Hugo uses Chroma as it\u0026rsquo;s built-in syntax-highlighter.\nFor detailed information about Syntax Highlighting in Hugo, check the Hugo\u0026rsquo;s Syntax Highlighting Documentation.\n","href":"/docs/syntax-highlighting/","title":"Syntax Highlighting"},{"content":" Engimo has three menus.\n Main Menu Sidebar Menu Social Menu  Main Menu name: main\nMain menu is located at the top of the site.\nCheck Hugo\u0026rsquo;s Menus Documentation for information about managing this menu.\nYou can hide the Main Menu using the following option in your config.toml file:\n[params.settings] hideMainMenu = true Sidebar Menu name: sidebar\nSocial Menu is available as Widget: sidebar_menu. Add it to the sidebar Widget Area to use it.\nYou can use Sidebar Menu as normal Hugo Menus.\nOr you can use it to mirror another menu by using the sidebar_menu.mirror option in your Widgets Configuration File. For example, this will mirror the Main Menu:\n[sidebar_menu] ... mirror = \u0026#34;main\u0026#34; The sidebar menu can display nested menus. The sub-pages need to have a page as parent defined in the page\u0026rsquo;s front matter:\nmenu: main: parent: myParentPage Social Menu Social Menu is available as Widget: social_menu. You can add it to Widget Areas to use it.\nUse the variables under [params.social] in your config.toml file for adding your social profiles:\n[params.social] codepen = \u0026#34;...\u0026#34; email = \u0026#34;...\u0026#34; facebook = \u0026#34;...\u0026#34; ... You only have to add your usernames. The theme will take care of the rest.\nChanging Social Menu Icons Order If you want to change the order of the social menu icons, use the social_menu.platforms option in your Widgets Configuration File.\nThe social menu icons will appear in the order you specify in the platforms array.\n","href":"/docs/menus/","title":"Menus Setup Guide"},{"content":" Engimo has built-in support for Opengraph tags. It will pick up most of the things from your contents\u0026rsquo; front-matters \u0026amp; Hugo configuration.\nYou can use these options in you content\u0026rsquo;s front-matter:\n--- audios: [] # for og:audio tags images: [] # for og:image tags videos: [] # for og:video tags ---  audios [Array of Strings]: path/url of audio files images [Array of Strings]: path/url of image files videos [Array of Strings]: path/url of video files  N.B.: the front-matter syntax shown here is yaml. If you use a different format (e.g. toml), the syntax will change accordingly.\nIf you add Cover Image to you content, it will also be picked up.\nFacebook Opengraph You can set these options in your config.toml files for better integration with Facebook:\n[params.opengraph.facebook] admins = [] # for fb:admins tags appID = \u0026#34;\u0026#34; # for fb:app_id tag pageID = \u0026#34;\u0026#34; # for article:publisher tag  admins [Array of Strings]: Facebook Profile IDs appID [String]: Facebook Application ID pageid [String]: Facebook Page ID  Also, the [social.facebook] field from the Author\u0026rsquo;s Profile data is used for article:author tag.\nTwitter Cards Engimo has built-in support for Twitter Cards.\nYou can set these options in your config.toml files to provide additional information for Twitter Cards:\n[params.opengraph.twitter] page = \u0026#34;\u0026#34; # for twitter:site tag  page [String]: Twitter Page\u0026rsquo;s Username  Also, the [social.twitter] field from the Author\u0026rsquo;s Profile data is used for twitter:creator tag.\n","href":"/docs/opengraph/","title":"Opengraph Support"},{"content":" Engimo supports multiple authors for your site. Just make sure you have the following configuration in your site\u0026rsquo;s config.toml:\n[taxonomies] author = \u0026#34;authors\u0026#34; Engimo treats Authors as a Hugo Taxonomy.\nAuthor\u0026rsquo;s Profile For adding an author to your site:\n Create data/authors folder in your site\u0026rsquo;s root directory Create a file with the filename format: \u0026lt;username\u0026gt;.toml  Now, add information about the author using the structure below:\n/data/authors/muniftanjim.toml\nid = \u0026#34;muniftanjim\u0026#34; [email] username = \u0026#34;muniftanjim\u0026#34; host = \u0026#34;gmail.com\u0026#34; [name] display = \u0026#34;Munif Tanjim\u0026#34; [social] email = \u0026#34;\u0026#34; facebook = \u0026#34;MunifTanjim\u0026#34; twitter = \u0026#34;MunifTanjim\u0026#34; You can use either the [email] fields or the [social.email] field. You don\u0026rsquo;t need to fill them both. However, it is encouraged to use [email] instead of [social.email].\nAdding Authors to Contents For adding authors to your content include the following option in your content\u0026rsquo;s front-matter:\n--- authors: [\u0026#34;muniftanjim\u0026#34;] ---  authors [Array of Strings]: username of authors  That\u0026rsquo;s all.\n","href":"/docs/authors/","title":"Authors Setup Guide"},{"content":"This is the Engimo\u0026rsquo;s configuraion file ( config.toml ) file of this site:\n#------------------- # # config.toml # # # # Hugo configuration # # ------------------ # # Website base URL #baseURL = \u0026#34;http://localhost:1313/\u0026#34; # dev #baseURL = \u0026#34;https://patevs.github.io/STEM-Notes/\u0026#34; # ghpages baseURL = \u0026#34;https://stem-notes.netlify.com/\u0026#34; # netlify # english languageCode = \u0026#34;en-us\u0026#34; # Website title title = \u0026#34;STEM Notes\u0026#34; # build directory default: \u0026#34;public\u0026#34;  # set to docs for ghpages deploy #publishDir = \u0026#34;docs\u0026#34; # for smart copyright line, leave this blank and check [params.copyright] copyright = \u0026#34;\u0026#34; # Theme name theme = \u0026#34;engimo\u0026#34; # Engimo theme config disqusShortname = \u0026#34;\u0026#34; googleAnalytics = \u0026#34;\u0026#34; Paginate = 5 preserveTaxonomyNames = true enableRobotsTXT = true # generate robots.txt # Syntax Highlighting ( https://gohugo.io/content-management/syntax-highlighting/ ) pygmentsCodefences = true enableEmoji = true # Missing translations will default to this content language defaultContentLanguage = \u0026#34;en\u0026#34; [params.info] description = \u0026#34;Science, Technologly, Engineering, Mathmatics\u0026#34; title404 = \u0026#34;404 nothing to see here!\u0026#34; [params.assets] favicon = \u0026#34;favicon.ico\u0026#34; customCSS = [\u0026#34;css/custom.css\u0026#34;] customJS = [\u0026#34;js/custom.js\u0026#34;] gopher = \u0026#34;\u0026#34; # used in 404 template ( Generator: https://gopherize.me ) [params.copyright] prefix = \u0026#34;--\u0026#34; holder = \u0026#34; | Patrick Evans\u0026#34; startYear = \u0026#34;2018\u0026#34; suffix = \u0026#34;--\u0026#34; [params.settings] # date \u0026amp; time format: https://golang.org/pkg/time/ dateFormat = \u0026#34;2006, Jan 02\u0026#34; listDateFormat = \u0026#34;2006, Jan 02\u0026#34; archiveDateFormat = \u0026#34;Jan 02\u0026#34; hideEntryNavigation = [\u0026#34;page\u0026#34;] # boolean / array of sections showReadingTime = false taxonomyCloudShuffle = false accentColor = \u0026#34;#44ccff\u0026#34; hideMainMenu = false [params.sidebar] enable = true [params.widgets] homepage = [\u0026#34;recent_posts\u0026#34;] sidebar = [\u0026#34;about\u0026#34;,\u0026#34;search\u0026#34;,\u0026#34;sidebar_menu\u0026#34;] #,\u0026#34;taxonomy_cloud\u0026#34; footer = [\u0026#34;social_menu\u0026#34;] [params.opengraph.facebook] admins = [] # array of Facebook IDs appID = \u0026#34;\u0026#34; pageID = \u0026#34;\u0026#34; [params.opengraph.twitter] page = \u0026#34;\u0026#34; # Twitter page username [params.seo] # Title Separator: - – — · • * ⋆ | ~ « » \u0026lt; \u0026gt; titleSeparator = \u0026#34;•\u0026#34; [params.social] email = \u0026#34;ppevans11@gmail.com\u0026#34; github = \u0026#34;patevs\u0026#34; [params.comments] enable = false [params.comments.staticman] enable = true apiEndpoint = \u0026#34;https://api.staticman.net/v2/entry\u0026#34; maxDepth = 2 [params.comments.staticman.github] username = \u0026#34;achary\u0026#34; repository = \u0026#34;engimo\u0026#34; branch = \u0026#34;master\u0026#34; # Utterances: https://utteranc.es [params.comments.utterances] enable = false issueTerm = \u0026#34;pathname\u0026#34; # pathname / url / title [params.comments.utterances.github] username = \u0026#34;achary\u0026#34; repository = \u0026#34;engimo\u0026#34; [params.search] client = \u0026#34;fuse\u0026#34; # algolia / fuse / lunr [params.search.algolia] appId = \u0026#34;\u0026#34; indexName = \u0026#34;\u0026#34; searchApiKey = \u0026#34;\u0026#34; [taxonomies] author = \u0026#34;authors\u0026#34; category = \u0026#34;categories\u0026#34; series = \u0026#34;series\u0026#34; tag = \u0026#34;tags\u0026#34; [permalinks] page = \u0026#34;/:slug/\u0026#34; #[[menu.main]] #name = \u0026#34;Repo\u0026#34; #weight = -10 #identifier = \u0026#34;repository\u0026#34; #url = \u0026#34;https://github.com/achary/engimo\u0026#34; [[menu.main]] name = \u0026#34;repo\u0026#34; weight = -10 identifier = \u0026#34;repository\u0026#34; url = \u0026#34;https://github.com/patevs/STEM-Notes\u0026#34; [blackfriday] hrefTargetBlank = true [languages] # edit this block for your own language [languages.en] lang = \u0026#34;en\u0026#34; languageName = \u0026#34;English\u0026#34; weight = 1 # # EOF # ","href":"/docs/config-file/","title":"Configuration File: config.toml"},{"content":" Updating Engimo Update Engimo clone Just replace the themes/engimo folder with the latest version of Engimo clone, i.e. delete the old folder and clone again:\nrm -rf themes/engimo git clone --depth 1 https://github.com/MunifTanjim/engimo themes/engimo Then, commit the changes:\ngit add themes/engimo git commit -m \u0026#34;update [theme]: engimo\u0026#34; Update Engimo submodule cd themes/engimo git checkout master git fetch \u0026amp;\u0026amp; git pull cd ../.. git add themes/engimo git commit -m \u0026#34;update [theme]: engimo\u0026#34; To Do After Updating Engimo After updating Engimo, always check that your site\u0026rsquo;s config.toml file matches the latest config.toml file format.\nA good idea is to double check all the Configuration settings of Engimo.\n","href":"/docs/updating/","title":"Updating Guide"},{"content":" First of all you will need to setup a Hugo site. You can follow the Hugo\u0026rsquo;s Quick Start Guide for that.\nAfter you\u0026rsquo;re done with that, it\u0026rsquo;s time for installing Engimo!\nInstalling Engimo There are two different ways you can install Engimo:\n As clone As submodule  The second method is recommended.\nInstall Engimo as clone With this method, you will simply clone it. And a copy of Engimo\u0026rsquo;s repository will be stored with the rest of you site. Enter the following command for cloning Engimo:\ngit clone --depth 1 https://github.com/achary/engimo themes/engimo Install Engimo as submodule This method doesn\u0026rsquo;t store a copy of Engimo\u0026rsquo;s repository inside your site\u0026rsquo;s repository. Rather it adds Engimo as a dependency. Start by this command:\ngit submodule add https://github.com/achary/engimo themes/engimo This will add Engimo\u0026rsquo;s repository as a submodule to your site\u0026rsquo;s repository. Now, you will have to pull the theme:\ngit submodule init git submodule update That\u0026rsquo;s all, Engimo is ready to be used.\nConfiguration for Engimo For getting started with Engimo, copy the config.toml file from the exampleSite directory inside Engimo\u0026rsquo;s repository to your site repository:\ncp themes/engimo/exampleSite/config.toml . You can take a look at the config.toml file of this site.\nNow, you can start editing this file and change the configuration!\nSetting up Authors Follow the Authors Setup Guide for setting up authors for you site.\nSetting up Widgets If you want to use Widgets on your site, take a look at the Widgets documentation\nEt voilà! Engimo is ready!\n","href":"/docs/installation/","title":"Installation Guide"},{"content":"","href":"/authors/","title":"Authors"},{"content":"","href":"/categories/","title":"Categories"},{"content":"","href":"/tags/config/","title":"Configuration"},{"content":"","href":"/tags/og/","title":"Opengraph"},{"content":"","href":"/page/","title":"Pages"},{"content":"","href":"/search/","title":"Search"},{"content":"","href":"/series/","title":"Series"},{"content":"","href":"/tags/","title":"Tags"},{"content":"","href":"/categories/tutorial/","title":"Tutorial"},{"content":"","href":"/authors/achary/","title":"achary"},{"content":"","href":"/tags/algolia/","title":"algolia"},{"content":"","href":"/tags/authors/","title":"authors"},{"content":"","href":"/tags/chroma/","title":"chroma"},{"content":"","href":"/tags/engineering/","title":"engineering"},{"content":"","href":"/categories/features/","title":"features"},{"content":"","href":"/tags/fuse.js/","title":"fuse.js"},{"content":"","href":"/tags/i18n/","title":"i18n"},{"content":"","href":"/tags/introduction/","title":"introduction"},{"content":"","href":"/tags/lunr.js/","title":"lunr.js"},{"content":"","href":"/tags/menus/","title":"menus"},{"content":"","href":"/authors/muniftanjim/","title":"muniftanjim"},{"content":"","href":"/categories/others/","title":"others"},{"content":"","href":"/authors/patevs/","title":"patevs"},{"content":"","href":"/tags/pygments/","title":"pygments"},{"content":"","href":"/tags/search/","title":"search"},{"content":"","href":"/tags/shortcode/","title":"shortcode"},{"content":"","href":"/tags/translation/","title":"translation"},{"content":"","href":"/tags/widgets/","title":"widgets"}]
